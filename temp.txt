Source: http://people.stat.sfu.ca/~cao/Teaching/852/LAR%20halves.R
=====================================================================================================================
#Splitting data into half randomanly
set.seed(130401000) 
College$set <- ifelse(runif(n=nrow(College))>0.5, yes=2, no=1)

#save data into x and y
y.1 <- College[which(College$set==1),10]
x.1 <- as.matrix(College[which(College$set==1),c(5,6,13,15)])
y.2 <- College[which(College$set==2),10]
x.2 <- as.matrix(College[which(College$set==2),c(5,6,13,15)])

#implement lasso on first half of the data
lasso.1 <- lars(y=y.1, x= x.1, type="lasso", trace=TRUE)
summary(lasso.1)
#plot coefficiant
plot(lasso.1)
#list coefficiant
coef(lasso.1)
# cv.lars() uses crossvalidation to estimate optimal position in path
cv.lasso.1 <- cv.lars(y=y.1, x= x.1, type="lasso")
cv.lasso.1
# Use the "+1SE rule" to find best model: 
#    Take the min CV and add its SE ("limit").  
#    Find smallest model that has its own CV within this limit (at "s.cv.1")
limit <- min(cv.lasso.1$cv) + cv.lasso.1$cv.error[which.min(cv.lasso.1$cv)]
s.cv.1 <- cv.lasso.1$index[min(which(cv.lasso.1$cv < limit))]
# Print out coefficients at optimal s.
coef(lasso.1, s=s.cv.1, mode="fraction")
# Predict both halves using first-half fit
(predict.1.1 <- predict(lasso.1, newx=x.1, s=s.cv.1, mode="fraction"))
(predict.1.2 <- predict(lasso.1, newx=x.2, s=s.cv.1, mode="fraction"))

lasso.2 <- lars(y=y.2, x= x.2, type="lasso", trace=TRUE)
summary(lasso.2)
plot(lasso.2) # Plots coefficient path
coef(lasso.2) # Lists out coefficients for each step in path
# cv.lars() uses crossvalidation to estimate optimal position in path
cv.lasso.2 <- cv.lars(y=y.2, x= x.2, type="lasso")
cv.lasso.2
# Use the "+1SE rule" to find best model: 
#    Take the min CV and add its SE ("limit").  
#    Find smallest model that has its own CV within this limit (at "s.cv.2")
limit <- min(cv.lasso.2$cv) + cv.lasso.2$cv.error[which.min(cv.lasso.2$cv)]
s.cv.2 <- cv.lasso.2$index[min(which(cv.lasso.2$cv < limit))]
# Print out coefficients at optimal s.
coef(lasso.2, s=s.cv.2, mode="fraction")
# Predict both halves using first-half fit
predict.2.1 <- predict(lasso.2, newx=x.1, s=s.cv.2, mode="fraction")
predict.2.2 <- predict(lasso.2, newx=x.2, s=s.cv.2, mode="fraction")

#result
plot(x=c(predict.1.1$fit,predict.1.2$fit), y=c(predict.2.1$fit,predict.2.2$fit), 
     xlab="Predictions using Set 1 model", ylab="predictions using Set 2 model")
abline(a=0,b=1)